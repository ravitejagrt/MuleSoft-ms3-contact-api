<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="get-identifications-collection-Flow">
        <db:select config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM identification;]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json skipNullOn="everywhere"
---
payload map {
	empId: $.emp_id,
	firstName: $.first_name,
	lastName: $.last_name,
	dob: $.dob as :date {format: "MM-dd-yyyy"},
	gender: $.gender,
	title: $.title
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get-identification-item-Flow">
        <db:select config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM identification WHERE id = #[flowVars.id]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json skipNullOn="everywhere"
---
{
	empId: payload[0].emp_id,
	firstName: payload[0].first_name,
	lastName: payload[0].last_name,
	dob: payload[0].dob,
	gender: payload[0].gender,
	title: payload[0].title
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="create-identification-Flow">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	firstName: payload.first_name,
	lastName: payload.last_name,
	dob: payload.dob,
	gender: payload.gender,
	title: payload.title
}]]></dw:set-payload>
        </dw:transform-message>
        <db:insert config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO indentification (first_name, last_name, dob, gender, title) VALUES (#[payload.firstName], #[payload.lastName], #[payload.dob], #[payload.gender], #[payload.title]);]]></db:parameterized-query>
        </db:insert>
        <logger level="INFO" doc:name="Logger" message="#[payload]"/>
    </flow>
    <flow name="update-identification-Flow">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	firstName: payload.first_name,
	lastName: payload.last_name,
	dob: payload.dob,
	gender: payload.gender,
	title: payload.title
}]]></dw:set-payload>
        </dw:transform-message>
        <db:update config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[UPDATE indentification SET first_name=#[payload.firstName], last_name=#[payload.lastName], dob=#[payload.dob], , gender=#[payload.gender], title=#[payload.title];]]></db:parameterized-query>
        </db:update>
        <logger level="INFO" doc:name="Logger" message="#[payload]"/>
    </flow>
    <flow name="delete-identification-Flow">
        <db:delete config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[DELETE FROM identifiCATION WHERE id = #[flowVars.id]]]></db:parameterized-query>
        </db:delete>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get-address-collection-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <db:select config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM address WHERE emp_id = #[flowVars.empId]]]></db:parameterized-query>
        </db:select>

        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json skipNullOn="everywhere"
---
payload map {
	empId: $.emp_id,
	addressId: $.add_id,
	type: $.type,
	number: $.number,
	street: $.street,
	unit: $.unit,
	city: $.city,
	state: $.state,
	zipcode: $.zipcode
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="create-address-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	empId: flowVars.id,
	type: payload.type,
	number: payload.number,
	street: payload.street,
	unit: payload.unit,
	city: payload.city,
	state: payload.state,
	zipcode: payload.zipcode
}]]></dw:set-payload>
        </dw:transform-message>
        <db:insert config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO address ("emp_id", "type", "number", "street", "unit", "city", "state", "zipcode") VALUES (#[payload.empId], #[payload.type], #[payload.number], #[payload.street], #[payload.unit], #[payload.city], #[payload.state], #[payload.zipcode])]]></db:parameterized-query>
        </db:insert>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>

    </flow>
    <flow name="get-address-item-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <set-variable variableName="addressId" value="#[message.inboundProperties.'http.uri.params'.addressId]" doc:name="addressId"/>
        <db:select config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM address WHERE emp_id = #[flowVars.empId] AND add_id = #[flowVars.addressId]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json skipNullOn="everywhere"
---
{
	empId: payload[0].emp_id,
	addressId: payload[0].add_id,
	type: payload[0].type,
	number: payload[0].number,
	street: payload[0].street,
	unit: payload[0].unit,
	city: payload[0].city,
	state: payload[0].state,
	zipcode: payload[0].zipcode
}]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="update-address-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <set-variable variableName="addressId" value="#[message.inboundProperties.'http.uri.params'.addressId]" doc:name="addressId"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	type: payload.type,
	number: payload.number,
	street: payload.street,
	unit: payload.unit,
	city: payload.city,
	state: payload.state,
	zipcode: payload.zipcode
}]]></dw:set-payload>
        </dw:transform-message>
        <db:update config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[UPDATE address 
SET "type"=#[payload.type], "number"=#[payload.number], "street"=#[payload.street], "unit"=#[payload.unit], "city"=#[payload.city], "state"=#[payload.state], "zipcode"=#[payload.zipcode] 
WHERE emp_id = #[flowVars.empId] AND add_id = #[flowVars.addressId]]]></db:parameterized-query>


        </db:update>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="delete-address-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <set-variable variableName="addressId" value="#[message.inboundProperties.'http.uri.params'.addressId]" doc:name="addressId"/>
        <db:delete config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[DELETE FROM address WHERE emp_id = #[flowVars.empId] AND add_id = #[flowVars.addressId]]]></db:parameterized-query>

        </db:delete>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>

    </flow>
	<flow name="get-communication-collection-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <db:select config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM communication WHERE emp_id = #[flowVars.empId]]]></db:parameterized-query>

        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json skipNullOn="everywhere"
---
payload map {
	communicationId: $.comm_id,
	empId: $.emp_id,
	type: $.type,
	value: $.value,
	preferred: $.preferred
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="create-communication-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	empId: flowVars.empId,
	type: payload.type,
	value: payload.value,
	preferred: payload.preferred
}]]></dw:set-payload>
        </dw:transform-message>
        <db:insert config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO communication (emp_id, "type", "value", "preferred") VALUES (#[payload.empId], #[payload.type], #[payload.value], #[payload.preferred])]]></db:parameterized-query>

        </db:insert>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get-communication-item-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <set-variable variableName="communicationId" value="#[message.inboundProperties.'http.uri.params'.communicationId]" doc:name="communicationId"/>
        <db:select config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM communication WHERE emp_id = #[flowVars.empId] AND comm_id=#[flowVars.communicationId]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
}]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="update-communication-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <set-variable variableName="communicationId" value="#[message.inboundProperties.'http.uri.params'.communicationId]" doc:name="communicationId"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	empId: flowVars.empId,
	type: payload.type,
	value: payload.value,
	preferred: payload.preferred
}]]></dw:set-payload>
        </dw:transform-message>
        <db:update config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[UPDATE communication 
SET "type"=#[payload.type], "value"=#[payload.value], "preferred"=#[payload.preferred] 
WHERE id = #[flowVars.id] AND comm_id=#[flowVars.communicationId]]]></db:parameterized-query>

        </db:update>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="delete-communication-Flow">
        <set-variable variableName="empId" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="empId"/>
        <set-variable variableName="communicationId" value="#[message.inboundProperties.'http.uri.params'.communicationId]" doc:name="communicationId"/>

        <db:delete config-ref="Generic_Database_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[DELETE FROM communication WHERE id = #[flowVars.id] AND comm_id=#[flowVars.communicationId]]]></db:parameterized-query>

        </db:delete>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
